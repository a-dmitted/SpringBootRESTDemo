name: Build and Deploy to Remote Server

on:
  push:
    branches:
      - main  # Set this to your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package -DskipTests # Adjust if you have a different build system

      - name: Upload JAR file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: springboot-app-files
          path: |
            target/SpringBootRESTDemo*.jar
            scripts/restart_server.sh

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - uses: actions/checkout@v2

      - name: Download JAR file artifact
        uses: actions/download-artifact@v2
        with:
          name: springboot-app-files

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clean up and copy files
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }} "rm -f /opt/SpringBootRESTDemo/*.jar"
          scp -o StrictHostKeyChecking=no ./SpringBootRESTDemo*.jar ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }}:/opt/SpringBootRESTDemo
          scp -o StrictHostKeyChecking=no ./restart_server.sh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }}:/opt/SpringBootRESTDemo

      - name: Restart Application
        run: ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }} 'bash -s' < ./scripts/restart_server.sh
        # Ensure you have a script on the server to safely stop the current instance and start the new one, or adjust this command accordingly.